{"version":3,"sources":["../js/main.js"],"names":["colors","turn","sequence","userResponse","i","speed","mode","squares","document","querySelectorAll","instructions","querySelector","randomizer","random","Math","length","index","floor","push","addRandom","highlighter","color","currentSquare","id","classList","toggle","gameLoop","setTimeout","currentColor","innerHTML","playGame","console","log","readyButton","addEventListener","clickHandler","evt","guess","target","winTester","winHandler","lossHandler","reverseTester","clearResponses","updateLevel","count","reset","updateMode","resetButton","levelDisplay","speedUp","speedButton","reverseMode","reverseButton","modeDisplay"],"mappings":"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","file":"main.8f75cf09.map","sourceRoot":"../src/pug","sourcesContent":["//set up variables\nlet colors = [\n    'green',\n    'red',\n    'yellow',\n    'blue'\n]\nlet turn = 1\nlet sequence = []\nlet userResponse = []\nlet i = 0\nlet speed = 800\nlet mode = 'Standard'\nlet squares = document.querySelectorAll('.squares-container .game-square')\nlet instructions = document.querySelector('h4')\n\n//function to create random array of colors -----------------------------------------------------------\n\nconst randomizer = function () {\n    for (let i = 0; i < (turn + 2); i++) {\n        let random = Math.random()\n        let length = colors.length\n        let index = Math.floor(length * random)\n        sequence.push(colors[index])\n    }\n}\n\n// function to add a random color to the sequence ------------------------------------------------\n\nconst addRandom = function () {\n    let random = Math.random()\n    let length = colors.length\n    let index = Math.floor(length * random)\n    sequence.push(colors[index])\n}\n\n// toggle highlighted square in order of the sequence ------------------------------------------\nconst highlighter = function(color) {\n    let currentSquare = squares[0]\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i].id === color) {\n            currentSquare = squares[i]\n        }\n    }\n    currentSquare.classList.toggle('highlighted')\n\n}\n\nconst gameLoop = function () {\n    setTimeout( function () {\n        let currentColor = sequence[i]\n        highlighter(currentColor)\n        setTimeout( function () {\n            highlighter(currentColor)\n        }, speed)\n        setTimeout( function () {\n            if (mode === 'Standard') {\n                instructions.innerHTML = 'Now click the sequence of colors in the same order'\n            } else {\n                instructions.innerHTML = 'Now click the sequence of colors in the REVERSE order'\n            }\n        }, speed + (speed * sequence.length) + 100)\n        i++\n        if (i < sequence.length) {\n            gameLoop()\n        }\n   }, (speed + 250))\n}\n\nconst playGame = () => {\n    userResponse = []\n    instructions.innerHTML = 'Watch the sequence of colors...'\n    if (turn === 1) {\n        sequence = []\n        randomizer()\n    }\n    console.log(sequence)\n    i = 0\n    gameLoop()\n}\n\nlet readyButton = document.querySelector('.ready-container button')\nreadyButton.addEventListener('click', playGame)\n\n\n\n//now get the user's response -------------------------------------------------------------\n\nconst clickHandler = function (evt) {\n    let guess = evt.target.id\n    userResponse.push(guess)\n\n    highlighter(guess)\n    setTimeout(() => {highlighter(guess)}, 150)\n\n    if (userResponse.length >= sequence.length && mode === 'Standard') {\n        if (winTester(userResponse)) {\n            winHandler()\n        } else {\n            lossHandler()\n        }\n    }\n    if (userResponse.length >= sequence.length && mode === 'Reverse') {\n        if (reverseTester(userResponse)) {\n            winHandler()\n        } else {\n            lossHandler()\n        }\n    }\n}\n\nfor (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener('click', clickHandler)\n}\n\n//functions for handling a correct response or an incorrect response -------------------------------------------\n\nconst winHandler = function () {\n    setTimeout( () => {instructions.innerHTML = \"Correct! Press 'Ready' again to try the next level.\"}, 410)\n    clearResponses()\n    turn++\n    updateLevel()\n    addRandom()\n}\n\nconst lossHandler = function () {\n    if (turn != 1) {\n        setTimeout( () => {instructions.innerHTML = \"Not quite! Guess again, press 'Ready' to replay, or press 'Reset Game' to start over.\"}, 410)\n        clearResponses()\n    } else {\n        setTimeout( () => {instructions.innerHTML = \"Not quite! Guess again, or press 'Ready' to start over.\"}, 410)\n        clearResponses()\n    }\n}\n\n//now compare user's response to the sequence ----------------------------------------------------------\nconst winTester = function (userResponse) {\n    let count = 0\n    for (let i = 0; i < sequence.length; i++) {\n        if (userResponse[i] === sequence[i]) {\n            count++\n        }\n    }\n    return count === sequence.length\n}\n\n\n//functions to move the game forward or reset the game -----------------------------------------------\nconst clearResponses = () => {\n    userResponse = []\n}\n\nconst reset = function () {\n    clearResponses()\n    turn = 1\n    updateLevel()\n    sequence = []\n    speed = 800\n    mode = 'Standard'\n    updateMode()\n    instructions.innerHTML = \"Press 'Ready' to begin\"\n}\n\nlet resetButton = document.querySelector('.reset-container button')\nresetButton.addEventListener('click', reset)\n\nconst updateLevel = function () {\n    let levelDisplay = document.querySelector('.level')\n    levelDisplay.innerHTML = turn\n}\n\n//make button to speed up the game ---------------------------------------------------------------------------\n\nconst speedUp = function () {\n    speed = speed * .5\n    console.log(speed)\n}\n\nlet speedButton = document.querySelector('.speed-container button')\nspeedButton.addEventListener('click', speedUp)\n\n//make button for reverse mode --------------------------------------------------------------------------------\n\nconst reverseTester = function (userResponse) {\n    let count = 0\n    for (let i = 0; i < sequence.length; i++) {\n        if (userResponse[i] === sequence[(sequence.length - (i + 1))]) {\n            count++\n        }\n    }\n    return count === sequence.length\n}\n\nconst reverseMode = () => {\n    mode = 'Reverse'\n    updateMode()\n    console.log('Reverse mode')\n    instructions.innerHTML = 'You are now in Reverse Mode'\n}\n\nlet reverseButton = document.querySelector('.reverse-container button')\nreverseButton.addEventListener('click', reverseMode)\n\nconst updateMode = () => {\n    let modeDisplay = document.querySelector('.mode')\n    modeDisplay.innerHTML = ` ${mode}`\n}\n"]}