{"version":3,"sources":["../js/main.js"],"names":["squares","document","querySelectorAll","colors","turn","sequence","userResponse","i","speed","randomizer","random","Math","length","index","floor","push","addRandom","highlight","color","currentSquare","id","style","opacity","removeHighlight","gameLoop","setTimeout","currentColor","console","log","playGame","readyButton","querySelector","addEventListener","responsesContainer","clickHandler","evt","guess","target","winTester","alert","clearResponses","updateLevel","count","reset","resetButton","levelDisplay","innerHTML","speedUp","speedButton"],"mappings":"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","file":"main.8f75cf09.map","sourceRoot":"../src/pug","sourcesContent":["//set up constants\nconst squares = document.querySelectorAll('.squares-container .game-square')\nconst colors = [\n    'green',\n    'red',\n    'yellow',\n    'blue'\n]\nlet turn = 1\nlet sequence = []\nlet userResponse = []\nlet i = 0\nlet speed = 800\n\n//create random array of colors -------------------------------------------------------------\n\nconst randomizer = function () {\n    for (let i = 0; i < (turn + 2); i++) {\n        let random = Math.random()\n        let length = colors.length\n        let index = Math.floor(length * random)\n        sequence.push(colors[index])\n    }\n}\n\n// function to add a random color to the sequence after each turn\n\nconst addRandom = function () {\n    let random = Math.random()\n    let length = colors.length\n    let index = Math.floor(length * random)\n    sequence.push(colors[index])\n}\n\n// change borders of game squares in order of the sequence ------------------------------------\nconst highlight = function(color) {\n    let currentSquare = squares[0]\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i].id === color) {\n            currentSquare = squares[i]\n        }\n    }\n    currentSquare.style.opacity = 1\n\n}\n\nconst removeHighlight = function(color) {\n    let currentSquare = squares[0]\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i].id === color) {\n            currentSquare = squares[i]\n        }\n    }\n    currentSquare.style.opacity = .3\n}\n\nconst gameLoop = function () {\n    setTimeout( function () {\n        let currentColor = sequence[i]\n        console.log(currentColor)\n        highlight(currentColor)\n        setTimeout( function () {\n            removeHighlight(currentColor)\n        }, speed)\n        i++\n        if (i < sequence.length) {\n            gameLoop()\n        }\n   }, (speed + 250))\n}\n\nconst playGame = function () {\n    if (turn === 1) {\n        sequence = []\n        randomizer()\n    }\n    console.log(sequence)\n    i = 0\n    gameLoop()\n}\n\nlet readyButton = document.querySelector('.ready-container button')\nreadyButton.addEventListener('click', playGame)\n\n\n\n//now get the user's response -------------------------------------------------------------\nlet responsesContainer = document.querySelector('.responses-container')\n\nconst clickHandler = function (evt) {\n    let guess = evt.target.id\n    userResponse.push(guess)\n\n    highlight(guess)\n    setTimeout(() => {removeHighlight(guess)}, 400)\n\n    if (userResponse.length >= sequence.length) {\n        if (turn != 1) {\n            if (winTester(userResponse)) {\n                setTimeout( function () {alert(\"Correct! Press 'Ready' again to try the next level.\")}, 410)\n                setTimeout( function () {clearResponses()}, 410)\n                turn++\n                updateLevel()\n                addRandom()\n            } else {\n                setTimeout( function() {alert(\"Not quite. Guess again, press 'Ready' to replay the sequence, or press 'Reset Game' to start over.\")}, 200)\n                setTimeout( function() {clearResponses()}, 410)\n            }\n        }\n        else {\n            if (winTester(userResponse)) {\n                setTimeout( function () {alert(\"Correct! Press 'Ready' again to try the next level.\")}, 410)\n                setTimeout( function () {clearResponses()}, 410)\n                turn++\n                updateLevel()\n                addRandom()\n            } else {\n                setTimeout( function() {alert(\"Not quite. Guess again, or press 'Ready' to start over.\")}, 200)\n                setTimeout( function() {clearResponses()}, 410)\n            }\n        }\n    }\n}\n\nfor (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener('click', clickHandler)\n}\n\n//now compare user's response to the sequence -----------------------------------------------\nconst winTester = function (userResponse) {\n    let count = 0\n    for (let i = 0; i < sequence.length; i++) {\n        if (userResponse[i] === sequence[i]) {\n            count++\n        }\n    }\n    return count === sequence.length\n}\n\n\n//functions to move the game forward or reset the game -----------------------------------------------\nconst clearResponses = function () {\n    userResponse = []\n}\n\nconst reset = function () {\n    clearResponses()\n    turn = 1\n    updateLevel()\n    sequence = []\n    speed = 800\n}\n\nlet resetButton = document.querySelector('.reset-container button')\nresetButton.addEventListener('click', reset)\n\nconst updateLevel = function () {\n    let levelDisplay = document.querySelector('span')\n    levelDisplay.innerHTML = turn\n}\n\n//make button to speed up \nconst speedUp = function () {\n    speed = speed * .5\n    console.log(speed)\n}\n\nlet speedButton = document.querySelector('.speed-container button')\nspeedButton.addEventListener('click', speedUp)\n"]}