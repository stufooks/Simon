{"version":3,"sources":["../js/main.js"],"names":["squares","document","querySelectorAll","instructions","querySelector","colors","turn","sequence","userResponse","i","speed","mode","randomizer","random","Math","length","index","floor","push","addRandom","highlighter","color","currentSquare","id","classList","toggle","gameLoop","setTimeout","currentColor","innerHTML","playGame","console","log","readyButton","addEventListener","clickHandler","evt","guess","target","winTester","winHandler","lossHandler","reverseTester","clearResponses","updateLevel","count","reset","updateMode","resetButton","levelDisplay","speedUp","speedButton","reverseMode","reverseButton","modeDisplay"],"mappings":"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","file":"main.8f75cf09.map","sourceRoot":"../src/pug","sourcesContent":["//set up constants\nlet squares = document.querySelectorAll('.squares-container .game-square')\nlet instructions = document.querySelector('h4')\nlet colors = [\n    'green',\n    'red',\n    'yellow',\n    'blue'\n]\nlet turn = 1\nlet sequence = []\nlet userResponse = []\nlet i = 0\nlet speed = 800\nlet mode = 'Standard'\n\n//create random array of colors -------------------------------------------------------------\n\nconst randomizer = function () {\n    for (let i = 0; i < (turn + 2); i++) {\n        let random = Math.random()\n        let length = colors.length\n        let index = Math.floor(length * random)\n        sequence.push(colors[index])\n    }\n}\n\n// function to add a random color to the sequence ------------------------------------------------\n\nconst addRandom = function () {\n    let random = Math.random()\n    let length = colors.length\n    let index = Math.floor(length * random)\n    sequence.push(colors[index])\n}\n\n// toggle highlighted square in order of the sequence ------------------------------------------\nconst highlighter = function(color) {\n    let currentSquare = squares[0]\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i].id === color) {\n            currentSquare = squares[i]\n        }\n    }\n    currentSquare.classList.toggle('highlighted')\n\n}\n\nconst gameLoop = function () {\n    setTimeout( function () {\n        let currentColor = sequence[i]\n        highlighter(currentColor)\n        setTimeout( function () {\n            highlighter(currentColor)\n        }, speed)\n        setTimeout( function () {\n            if (mode === 'Standard') {\n                instructions.innerHTML = 'Now click the sequence of colors in the same order'\n            } else {\n                instructions.innerHTML = 'Now click the sequence of colors in the REVERSE order'\n            }\n        }, speed + (speed * sequence.length) + 100)\n        i++\n        if (i < sequence.length) {\n            gameLoop()\n        }\n   }, (speed + 250))\n}\n\nconst playGame = () => {\n    userResponse = []\n    instructions.innerHTML = 'Watch the sequence of colors...'\n    if (turn === 1) {\n        sequence = []\n        randomizer()\n    }\n    console.log(sequence)\n    i = 0\n    gameLoop()\n}\n\nlet readyButton = document.querySelector('.ready-container button')\nreadyButton.addEventListener('click', playGame)\n\n\n\n//now get the user's response -------------------------------------------------------------\n\nconst clickHandler = function (evt) {\n    let guess = evt.target.id\n    userResponse.push(guess)\n\n    highlighter(guess)\n    setTimeout(() => {highlighter(guess)}, 150)\n\n    if (userResponse.length >= sequence.length && mode === 'Standard') {\n        if (winTester(userResponse)) {\n            winHandler()\n        } else {\n            lossHandler()\n        }\n    }\n    if (userResponse.length >= sequence.length && mode === 'Reverse') {\n        if (reverseTester(userResponse)) {\n            winHandler()\n        } else {\n            lossHandler()\n        }\n    }\n}\n\nfor (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener('click', clickHandler)\n}\n\n//functions for handling a correct response or an incorrect response -------------------------------------------\n\nconst winHandler = function () {\n    setTimeout( () => {instructions.innerHTML = \"Correct! Press 'Ready' again to try the next level.\"}, 410)\n    clearResponses()\n    turn++\n    updateLevel()\n    addRandom()\n}\n\nconst lossHandler = function () {\n    if (turn != 1) {\n        setTimeout( () => {instructions.innerHTML = \"Not quite! Guess again, press 'Ready' to replay, or press 'Reset Game' to start over.\"}, 410)\n        clearResponses()\n    } else {\n        setTimeout( () => {instructions.innerHTML = \"Not quite! Guess again, or press 'Ready' to start over.\"}, 410)\n        clearResponses()\n    }\n}\n\n//now compare user's response to the sequence ----------------------------------------------------------\nconst winTester = function (userResponse) {\n    let count = 0\n    for (let i = 0; i < sequence.length; i++) {\n        if (userResponse[i] === sequence[i]) {\n            count++\n        }\n    }\n    return count === sequence.length\n}\n\n\n//functions to move the game forward or reset the game -----------------------------------------------\nconst clearResponses = () => {\n    userResponse = []\n}\n\nconst reset = function () {\n    clearResponses()\n    turn = 1\n    updateLevel()\n    sequence = []\n    speed = 800\n    mode = 'Standard'\n    updateMode()\n    instructions.innerHTML = \"Press 'Ready' to begin\"\n}\n\nlet resetButton = document.querySelector('.reset-container button')\nresetButton.addEventListener('click', reset)\n\nconst updateLevel = function () {\n    let levelDisplay = document.querySelector('.level')\n    levelDisplay.innerHTML = turn\n}\n\n//make button to speed up the game ---------------------------------------------------------------------------\n\nconst speedUp = function () {\n    speed = speed * .5\n    console.log(speed)\n}\n\nlet speedButton = document.querySelector('.speed-container button')\nspeedButton.addEventListener('click', speedUp)\n\n//make button for reverse mode --------------------------------------------------------------------------------\n\nconst reverseTester = function (userResponse) {\n    let count = 0\n    for (let i = 0; i < sequence.length; i++) {\n        if (userResponse[i] === sequence[(sequence.length - (i + 1))]) {\n            count++\n        }\n    }\n    return count === sequence.length\n}\n\nconst reverseMode = () => {\n    mode = 'Reverse'\n    updateMode()\n    console.log('Reverse mode')\n    instructions.innerHTML = 'You are now in Reverse Mode'\n}\n\nlet reverseButton = document.querySelector('.reverse-container button')\nreverseButton.addEventListener('click', reverseMode)\n\nconst updateMode = () => {\n    let modeDisplay = document.querySelector('.mode')\n    modeDisplay.innerHTML = ` ${mode}`\n}\n"]}