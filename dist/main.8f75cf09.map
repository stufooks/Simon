{"version":3,"sources":["../js/main.js"],"names":["squares","document","querySelectorAll","colors","level","sequence","i","random","Math","length","index","floor","push","console","log","highlight","color","currentSquare","id","classList","add","removeHighlight","remove","gameLoop","setTimeout","currentColor","button","querySelector","addEventListener","userResponse","clickHandler","evt","guess","target","winTester","count"],"mappings":"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","file":"main.8f75cf09.map","sourceRoot":"../src/pug","sourcesContent":["//set up constants\nconst squares = document.querySelectorAll('.squares-container .game-square')\nconst colors = [\n    'green',\n    'red',\n    'yellow',\n    'blue'\n]\nlet level = 1\nlet sequence = []\n\n//create random array of colors\nfor (let i = 0; i < (level + 2); i++) {\n    let random = Math.random()\n    let length = colors.length\n    let index = Math.floor(length * random)\n    sequence.push(colors[index])\n}\nconsole.log(sequence)\n\n// change borders of game squares in order of sequence\nconst highlight = function(color) {\n    let currentSquare = squares[0]\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i].id === color) {\n            currentSquare = squares[i]\n        }\n    }\n    currentSquare.classList.add('highlighted')\n}\n\nconst removeHighlight = function(color) {\n    let currentSquare = squares[0]\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i].id === color) {\n            currentSquare = squares[i]\n        }\n    }\n    currentSquare.classList.remove('highlighted')\n}\n\nlet i = 0\nconst gameLoop = function () {\n   setTimeout( function () {\n        let currentColor = sequence[i]\n        highlight(currentColor)\n        setTimeout( function () {\n            removeHighlight(currentColor)\n        }, 800)\n        i++\n        if (i < sequence.length) {\n            gameLoop()\n        }\n   }, 1300)\n}\n\nlet button = document.querySelector('button')\nbutton.addEventListener('click', gameLoop)\n\n//now get the user's response\nconst userResponse = []\n\nconst clickHandler = function (evt) {\n    let guess = evt.target.id\n    userResponse.push(guess)\n    if (userResponse.length === sequence.length) {\n        if (winTester(userResponse)) {\n            console.log('winner')\n        } else {\n            console.log('not quite')\n        }\n    }\n}\n\nfor (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener('click', clickHandler)\n}\n\n//now compare user's response to the sequence\nconst winTester = function (userResponse) {\n    let count = 0\n    for (let i = 0; i < sequence.length; i++) {\n        if (userResponse[i] === sequence[i]) {\n            count++\n        }\n    }\n    return count === sequence.length\n}"]}